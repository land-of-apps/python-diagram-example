{
  "events": [
    {
      "static": false,
      "receiver": {
        "kind": "req",
        "object_id": 14050161184,
        "value": "<TestConfig: myapp>",
        "name": "self",
        "class": "tests._site.apps.myapp.apps.TestConfig"
      },
      "parameters": [
        {
          "kind": "req",
          "object_id": 14050434448,
          "value": "<URLPattern '' [name='index']>",
          "name": "pattern",
          "class": "django.urls.resolvers.URLPattern"
        }
      ],
      "id": 1,
      "event": "call",
      "thread_id": 1,
      "defined_class": "oscar.core.application.OscarConfigMixin",
      "method_id": "get_url_decorator",
      "path": "src/oscar/core/application.py",
      "lineno": 118
    },
    {
      "static": false,
      "receiver": {
        "kind": "req",
        "object_id": 14050161184,
        "value": "<TestConfig: myapp>",
        "name": "self",
        "class": "tests._site.apps.myapp.apps.TestConfig"
      },
      "parameters": [
        {
          "kind": "req",
          "object_id": 4331068016,
          "value": "'index'",
          "name": "url",
          "class": "builtins.str"
        }
      ],
      "id": 2,
      "event": "call",
      "thread_id": 1,
      "defined_class": "oscar.core.application.OscarConfigMixin",
      "method_id": "get_permissions",
      "path": "src/oscar/core/application.py",
      "lineno": 101
    },
    {
      "return_value": {
        "object_id": 4377579824,
        "value": "'is_staff'",
        "class": "builtins.str"
      },
      "parent_id": 2,
      "elapsed": 9.5367431640625e-7,
      "id": 3,
      "event": "return",
      "thread_id": 1
    },
    {
      "return_value": {
        "object_id": 14050435568,
        "value": "<MagicMock name='permissions_required()' id='14050435568'>",
        "class": "unittest.mock.MagicMock"
      },
      "parent_id": 1,
      "elapsed": 0.0004961490631103516,
      "id": 4,
      "event": "return",
      "thread_id": 1
    }
  ],
  "version": "1.9",
  "metadata": {
    "language": {
      "name": "python",
      "engine": "CPython",
      "version": "3.8.19"
    },
    "client": {
      "name": "appmap",
      "url": "https://github.com/applandinc/appmap-python"
    },
    "git": {
      "repository": "https://github.com/land-of-apps/django-oscar.git",
      "branch": "master",
      "commit": "01aa57720e1e703bdc166b20350eff665be60dad"
    },
    "frameworks": [
      {
        "name": "pytest",
        "version": "7.4.4"
      }
    ],
    "feature_group": "Oscar config test case",
    "recording": {
      "defined_class": "tests.unit.core.test_application.OscarConfigTestCase",
      "method_id": "test_get_url_decorator_fetches_correct_perms"
    },
    "source_location": "tests/unit/core/test_application.py:26",
    "name": "Oscar config test case get url decorator fetches correct perms",
    "feature": "Get url decorator fetches correct perms",
    "app": "django-oscar",
    "recorder": {
      "name": "pytest",
      "type": "tests"
    },
    "test_status": "succeeded"
  },
  "classMap": [
    {
      "name": "oscar",
      "type": "package",
      "children": [
        {
          "name": "core",
          "type": "package",
          "children": [
            {
              "name": "application",
              "type": "package",
              "children": [
                {
                  "name": "OscarConfigMixin",
                  "type": "class",
                  "children": [
                    {
                      "name": "get_url_decorator",
                      "type": "function",
                      "static": false,
                      "location": "src/oscar/core/application.py:118"
                    },
                    {
                      "name": "get_permissions",
                      "type": "function",
                      "static": false,
                      "location": "src/oscar/core/application.py:101"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}